apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'jacoco'


def vcsLink = 'https://github.com/kkalisz/preffer.git'
group = 'pl.kalisz.kamil'
version = '0.4.0-SNAPSHOT'

android {
    compileSdkVersion 27

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 27
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
        archivesBaseName = 'preffer'
        versionCode 1
        versionName version
    }
    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

bintray {
    user = binTrayUser          // id użytkownika
    key = binTrayApiKey         // apiKey
    configurations = ['archives']  // nazwa konfiguracji która ma być wykorzystana archives jest domyślna

    pkg {                       // nazwa rezpoytorium w bintray w którym mają być umieszczone artefakty
        repo = 'maven'
        name = archivesBaseName  // nazwa projektu
        userOrg = 'kamil-kalisz'
        licenses = ['Apache-2.0'] // licencja projektu
        vcsUrl = vcsLink  // link do rezpoytorium kodu
        publish = true          // czy artefakty pwinny być wysłane do rezpoytrium
        }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.cedarsoftware:json-io:4.10.0@jar"
}

connectedCheck << {
    println '##teamcity[jacocoReport dataPath=\'library/build/outputs/code-coverage/connected/coverage.ec\' includes=\'pl.kalisz.kamil*\' classpath=\'-:library/build/intermediates/classes/androidTest//** +:library/build/intermediates/classes/debug//**\']'
}

bintrayUpload.dependsOn("install")
